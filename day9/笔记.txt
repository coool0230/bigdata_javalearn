Thread
--------------------------------
	并发


java.lang.Runnable:{
	public void();
	}
-----------------------------------
	1.接口
	2.public void run();
	3.供现有类实现线程功能
	4.使用Runnable对象创建线程
		new  Thread(Runnable r).start();
	5.静态同步方法使用class 作为锁
	6.非静态同步方法是是使用this(当前对象)作为锁
	5.接口  降低耦合性



class Car implements Runnable{
	...
	static synchronized void xxx(){
		...
	}
}


new Thread(Runnable r).start();

s.start();	自己调用
s.run();  jvm  虚拟机在调用

线程安全性问题
------------------------------
	synchronized(Object){
		...
	}

	public synchronized void xxx(){

		...
	}


	public static synchronized void xxx(){
		...
	}


IDE
-----------------------------
	集成开发环境:
		integrate development environment


eclipse
-----------------------------------
	1.日蚀
	2.netbeans
	3.IDEA
	4.borland Jbuilder
	
	
	5.透视图
		perspective,
		eclipse -> window -> perspective -->
	6.视图
		eclipse --->windows --> show view --->  other --> all view
		
	
	7.指定工作空间
		eclipse  --> file --> switch workspace  --> other --> new --> ...

	8.

	9. alt + /

	10.bulid path
		classpath
	11.
		


线程状态
----------------------------
	1.NEW
		尚未运行
	2.RUNNABLE
		正在运行

	3.BLOCKED
		等待监视器的锁定权
		synchronized(this){
			同步代码块
		}
	4.WAITING

		等待(无限等待)
		一个线程在等待另一个线程特定的操作
	5. TIMED_WAITING
		等待(限时等待)
		等待指定时间
	6.TERMINATED
		线程退出
		
	7.sleep
		休眠状态

		

		
